Given a array arr of integers, return the sums of all subsets in the list.  Return the sums in any order.


//{ Driver Code Starts
import java.io.*;
import java.util.*;

class Geeks {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine()); // Number of test cases
        for (int g = 0; g < t; g++) {
            String[] str =
                (br.readLine()).trim().split(" "); // Reading input as a string array
            int arr[] = new int[str.length]; // Creating integer array from the input
            for (int i = 0; i < str.length; i++) {
                arr[i] = Integer.parseInt(str[i]);
            }

            // Getting the result from the Solution class
            ArrayList<Integer> result = new Solution().subsetSums(arr);
            Collections.sort(result);
            // Printing the result in space-separated format
            for (int i = 0; i < result.size(); i++) {
                if (i != 0) System.out.print(" ");
                System.out.print(result.get(i));
            }
            System.out.println();    // Print new line after each test case
            System.out.println("~"); // Print new line after each test case
        }
    }
}

// } Driver Code Ends


// User function Template for Java//User function Template for Java
class Solution {
     ArrayList<Integer> result = new ArrayList<>();
    public ArrayList<Integer> subsetSums(int[] arr) {
        int currentSum = 0;
        solve(arr, 0, currentSum);
        return result;
        // code here
    }
    private void solve(int[] nums, int idx, int currentSum) {
        if (idx >= nums.length) {
            result.add(currentSum); // Add the current sum to the result
            return;
        }

        // Include the current element in the sum
        solve(nums, idx + 1, currentSum + nums[idx]);

        // Exclude the current element from the sum
        solve(nums, idx + 1, currentSum);
    }
}